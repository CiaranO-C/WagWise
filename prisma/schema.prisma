generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @default(autoincrement())
  username String        @unique
  email    String?       @unique
  password String        @map("password_hash")
  role     Role          @default(USER)
  articles Article[]     @relation("userArticles")
  comments Comment[]
  tokens   RefreshToken?
  likes    Article[]     @relation("userLikes")

  @@map("users")
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String    @unique
  body      String
  task      Json?
  authorId  Int       @map("user_id")
  created   DateTime  @default(now())
  updated   DateTime  @updatedAt
  published Boolean   @default(false)
  author    User      @relation("userArticles", fields: [authorId], references: [id])
  comments  Comment[]
  tags      Tags[]    @relation("ArticleToTags")
  likes     User[]    @relation("userLikes")

  @@map("articles")
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  authorId  Int      @map("user_id")
  articleId Int      @map("article_id")
  created   DateTime @default(now())
  review    Boolean  @default(false)
  article   Article  @relation(fields: [articleId], references: [id])
  author    User     @relation(fields: [authorId], references: [id])

  @@map("comments")
}

model Tags {
  tagName  String    @id @map("tag_name")
  articles Article[] @relation("ArticleToTags")

  @@map("tags")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created")
  expiresAt DateTime @map("expires")
  user      User     @relation(fields: [userId], references: [id])

  @@map("refresh_tokens")
}

enum Role {
  USER
  ADMIN
}
